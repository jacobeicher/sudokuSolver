import numpy as np
import pygame

def button(msg, x, y, w, h, ic, ac, puzzle):
    mouse = pygame.mouse.get_pos()
    #print(mouse.x + ", " + mouse.y)
    click = pygame.mouse.get_pressed()
    if x+w > mouse[0] > x and y+h > mouse[1] > y:
        pygame.draw.rect(gameBoard, ac,(x,y,w,h))
        if click[0] == 1:
            if msg == "solve!":
                global gameExit
                gameExit = True
                
    else:
        pygame.draw.rect(gameBoard, ic,(x,y,w,h))
    if msg == "solve!":
        font = pygame.font.SysFont(None, 50)
    else:
        font = pygame.font.SysFont(None, 75)
    gameBoard.blit(font.render(msg, True, BLACK), (x+15,y+8))


def possible(y, x ,n):
    global puzzle
    for i in range(0,9):
        if puzzle[y][i] == n:
            return False
    for i in range(0,9):
        if puzzle[i][x] == n:
            return False

    x0 = (x//3)*3
    y0 = (y//3)*3
    for i in range(0,3):
        for j in range(0,3):
            if puzzle[y0 + i][x0 + j] == n:
                return False

    return True

def solve():
    global puzzle

    for y in range(9):
        for x in range(9):
            if puzzle[y][x] == 0:
                for n in range(1,10):
                    if possible(y, x , n):
                        puzzle[y][x] = n
                        solve()
                        puzzle[y][x] = 0;

                return;

    print (np.matrix(puzzle))
    return
    #input("check for more?")

puzzle  = [ [5, 3, 0, 0, 7, 0, 0, 0, 0], 
            [6, 0, 0, 1, 9, 5, 0, 0, 0], 
            [0, 9, 8, 0, 0, 0, 0, 6, 0], 
            [8, 0, 0, 0, 6, 0, 0, 0, 3], 
            [4, 0, 0, 8, 0, 3, 0, 0, 1], 
            [7, 0, 0, 0, 2, 0, 0, 0, 6], 
            [0, 6, 0, 0, 0, 0, 2, 8, 0], 
            [0, 0, 0, 4, 1, 9, 0, 0, 5], 
            [0, 0, 0, 0, 8, 0, 0, 7, 9]]
            
print (np.matrix(puzzle))

for x in range(2):
    pygame.init()

    gameBoard = pygame.display.set_mode((600,600))
    pygame.display.set_caption("Sudoku Solver")

    pygame.display.update()

    gameExit = False;
    GREY = (220,220,220)
    WHITE = (255,255,255)
    BLACK = (0,0,0)
    RED = (255,0,0)
    GREEN = (0,255,0)

        
    while not gameExit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameExit = True

        x = 30
        
        gameBoard.fill(WHITE)
        
        for j in range(9):
            y = 10;
            for i in range(9):
                if(((j < 3 or j > 5) and i > 2 and i < 6) or (j > 2 and j < 6 and (i < 3 or i > 5))):
                    pygame.draw.rect(gameBoard, RED, [x,y,60,60])
                else:
                    pygame.draw.rect(gameBoard, BLACK, [x,y,60,60])
                
                button("solve!", 235, 550, 125, 60, GREEN, GREY, puzzle)
                #pygame.draw.rect(gameBoard, GREEN, [280,550,100,40])

                if(puzzle[j][i] != 0):
                    num = str(puzzle[j][i])
                else:
                    num = ""

                button(num, x+3, y+3, 56, 56, WHITE, GREY, puzzle)
        
                y += 60
            x += 60

        pygame.display.update();

    pygame.quit()

    solve()

quit()